#BASIC CALCULATOR
import math
import random

#FUNCTIONS


def add(first, second):
    print("\nfirst + second = ")
    return (first+second)


def subtract(first, second):
    print("first-second = ")
    print(first-second)
    print("\nsecond-first = ")
    print(second-first)
    print("")


def multiply(first, second):
    return (first*second)


def divide(first, second):
    print("\nfirst/second = ")
    print (first/second)
    print("\nsecond/first = ")
    print(second/first)
    print("")


def square(first, second):
    print("\nThis is the square of the first number you put:")
    print(first*first)
    print("\nThis is the square of the second number you put:")
    print(second*second)
    print("")



def sqrtexact(num1, first, count):
    while first*first != num1:
        value = (float(random.randint(0, num1)))
        first += .0000000000001
        count += 1
        print(count)
        if first*first == num1:
            print(first)
            print("eureaka idk")
            break

def sqrt(num1, first):
    while first*first != num1:
        value = (float(random.randint(0, num1)))
        first += 1
        first*first
        if first*first == num1:
            print(first)
            break
        elif first*first != num1 and first*first > num1:
            print("\nYou're number doesn't seem to have a square root that is a whole number. You can try to find the\nexact "
                  "square root of this number but I wouldn't recommend trying this, if it's a number greater than"
                  "100, for it may take awhile until it gets solved. However, if you would like to try again, despite the time, press 2. otherwise press 1.")
            sqrtcont = input("\nIf you would like to get the exact sqare root of your nubmer press 2. if you would like to quit, press 1: ")
            if sqrtcont == "2":
                print(sqrtexact(num1, guess, count))
            else:
                print("Still doesn't look like it's going to work, sorry.")


#FUNCTIONS
Pi = math.pi


#CALCULATOR

print("\nThis is a calculator, select one of the operations:\n\n1.Add\n2.Subtract\n3.Multiply\n4.Divide\n5.Square\n7."
      "Square Root(This will have to be the first number you put.)(both numbers - default)\n\nP.S: If you want to use Ï€,"
      " you can use just type \"-3.14\"")



count = 0
guess = 0
factor = (str(input("\nEnter what operation you want: ")))
if factor == "7":
    num1 = (float(input("\nEnter a number, this will be the number that the square root will be found of (grammer check please.)")))
if factor == "7":
    pass
else:
    num1 = (float(input("\nEnter a number, this will be the FIRST one: ")))
    num2 = float(input("\nEnter a number, this will be the SECOND one: "))
    if num1 == -3.14:
        num1 = Pi
    elif num2 == -3.14:
        num2 == Pi

if factor == "1":
    print("ADDITION:\n")
    print(add(num1, num2))
elif factor == "2":
    print("SUBTRACTION:\n")
    print(subtract(num1, num2))
elif factor == "3":
    print("MULTIPLICATION:\n")
    print(multiply(num1, num2))
elif factor == "4":
    print("DIVISION:\n")
    print(divide(num1, num2))
elif factor == "5":
    print("SQUARE:\n")
    print(square(num1, num2))
elif factor == "7":
    print(sqrt(num1, guess))
elif factor > 7:
    print("\nThere is no built in operation that is that high. Come Back Later.")




print("\nThanks for using my calculator. I\'m trying to make it better.")
print("Press any key to exit:")
print("")













































 OLD 
 
#BASIC CALCULATOR

#VAIRABLES

num1 = (float(input("Enter a number, this will be the first one.")))
num2 = (float(input("Enter a number, this will be the second one.")))
factor = input("Enter what operation you want.")
try:
  if factor == "/" or " /" or " / ":
    print(num1/num2)
  elif factor == "+" or " +" or " + ":
    print(num1+num2)
  elif factor == "*" or " *" or " * ":
    print(num1*num2)
  elif factor == "-" or " -" or " - ":
    print(num1-num2)
  else:
    print("this is broken thanks.")
except:
  print("this is broken thanks.")
print("Thanks for using my calculator. I\'m trying to make it better.")





